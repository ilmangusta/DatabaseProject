----------------- luca ---------------------


CREATE OR REPLACE TRIGGER MENO_POSTILIBERI BEFORE
    INSERT ON PREPRENOTAZIONE FOR EACH ROW
DECLARE
    IDCR            number;
    TIPO            VARCHAR2(255);
    QUANTI          number;
    POSTILIBERI     number;
    singola varchar2(255) := 'Singola';
    doppia varchar2(255) := 'Doppia';
BEGIN

    TIPO:= :NEW.TIPOLOGIA;
    QUANTI:= :NEW.QUANTITA;

    SELECT
        P.IDCROCIERA INTO IDCR
    FROM
        PRENOTAZIONE P
    WHERE
        P.IDPRENOTAZIONE=:NEW.IDPRENOTAZIONE;

    SELECT
        NUMEROPOSTILIBERI INTO POSTILIBERI
    FROM
        DISPONIBILITACAMERE
    WHERE
        IDCROCIERA=IDCR
        AND TIPOLOGIA=TIPO;


    IF (TIPO=singola) THEN
        QUANTI:=QUANTI+0;
    ELSIF (TIPO=doppia) THEN
        QUANTI:=QUANTI*2;
    ELSE
        QUANTI:=QUANTI*3;
    END IF;
    IF (POSTILIBERI - QUANTI<0) THEN
        RAISE_APPLICATION_ERROR(-20001, 'Posti non disponibili per questa tipologia.');
    ELSE
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTILIBERI = NUMEROPOSTILIBERI - QUANTI
        WHERE
            IDCROCIERA=IDCR
            AND TIPOLOGIA=TIPO;
    END IF;
END;
/



CREATE OR REPLACE TRIGGER PIU_POSTILIBERI BEFORE
    DELETE ON PREPRENOTAZIONE FOR EACH ROW
DECLARE
    IDCR        NUMBER;
    TIPO        VARCHAR2(255);
    QUANTI      NUMBER;
    POSTILIBERI NUMBER;
    POSTITOTALI NUMBER;
    SINGOLA     VARCHAR2(255) := 'Singola';
    DOPPIA      VARCHAR2(255) := 'Doppia';
BEGIN
    TIPO:= :old.TIPOLOGIA;
    QUANTI:= :old.QUANTITA;
    SELECT
        IDCROCIERA INTO IDCR
    FROM
        PRENOTAZIONE
    WHERE
        IDPRENOTAZIONE=:old.IDPRENOTAZIONE;
    SELECT
        NUMEROPOSTITOTALI INTO POSTITOTALI
    FROM
        DISPONIBILITACAMERE
    WHERE
        IDCROCIERA=IDCR
        AND TIPOLOGIA=TIPO;

    SELECT
        NUMEROPOSTILIBERI INTO POSTILIBERI
    FROM
        DISPONIBILITACAMERE
    WHERE
        IDCROCIERA=IDCR
        AND TIPOLOGIA=TIPO;
    IF (TIPO=SINGOLA) THEN
        QUANTI:=QUANTI+0;
    ELSIF (TIPO=DOPPIA) THEN
        QUANTI:=QUANTI*2;
    ELSE
        QUANTI:=QUANTI*3;
    END IF;
    IF (POSTILIBERI + QUANTI>POSTITOTALI) THEN
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTILIBERI = POSTITOTALI
        WHERE
            IDCROCIERA=IDCR
            AND TIPOLOGIA=TIPO;
    ELSE
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTILIBERI = NUMEROPOSTILIBERI + QUANTI
        WHERE
            IDCROCIERA=IDCR
            AND TIPOLOGIA=TIPO;
    END IF;
END;
/



CREATE OR REPLACE TRIGGER CHECK_DATAVISITA BEFORE
    INSERT ON VISITEDISPONIBILI FOR EACH ROW
DECLARE
    ID_TOUR NUMBER;
    DATA_C  DATE;
    N_NOTTI NUMBER;
BEGIN
    SELECT
        DATACROCIERA INTO DATA_C
    FROM
        CROCIERA
    WHERE
        IDCROCIERA=:NEW.IDCROCIERA;
    SELECT
        IDTOUR INTO ID_TOUR
    FROM
        CROCIERA
    WHERE
        IDCROCIERA=:NEW.IDCROCIERA;
    SELECT
        NUMERONOTTI INTO N_NOTTI
    FROM
        TOUR T
    WHERE
        IDTOUR=ID_TOUR;
    IF (:NEW.DATAVISITA < DATA_C
    OR :NEW.DATAVISITA > DATA_C + N_NOTTI) THEN
        RAISE_APPLICATION_ERROR(-20001, 'Data visita sbagliata.');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER CAMERA_NON_DISPONIBILE before
    UPDATE OF ISDISPONIBILE ON CAMERA FOR EACH ROW WHEN (NEW.ISDISPONIBILE = 0)
DECLARE
    SINGOLA       VARCHAR2(255) := 'Singola';
    DOPPIA        VARCHAR2(255) := 'Doppia';
    V_TIPOLOGIA   VARCHAR2(255);
    C_IDCR        SYS_REFCURSOR;
    V_ID_CROCIERA number;
    V_QUANTI      number;
BEGIN

    V_TIPOLOGIA:= :old.TIPOLOGIA;
    IF (:NEW.TIPOLOGIA=SINGOLA) THEN
        V_QUANTI:=1;
    ELSIF (:NEW.TIPOLOGIA=DOPPIA) THEN
        V_QUANTI:=2;
    ELSE
        V_QUANTI:=3;
    END IF;
   
    OPEN C_IDCR FOR
        SELECT
            IDCROCIERA
        FROM
            CROCIERA
        WHERE
            IDNAVE = :old.IDNAVE;
    LOOP
        FETCH C_IDCR INTO V_ID_CROCIERA;
        EXIT WHEN C_IDCR%NOTFOUND;
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTILIBERI = NUMEROPOSTILIBERI - V_QUANTI
        WHERE
            IDCROCIERA = V_ID_CROCIERA
            AND TIPOLOGIA = V_TIPOLOGIA;
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTITOTALI = NUMEROPOSTITOTALI - V_QUANTI
        WHERE
            IDCROCIERA = V_ID_CROCIERA
            AND TIPOLOGIA = V_TIPOLOGIA;
    END LOOP;
    CLOSE C_IDCR;
END;
/


CREATE OR REPLACE TRIGGER CAMERA_DISPONIBILE BEFORE
    UPDATE OF ISDISPONIBILE ON CAMERA FOR EACH ROW WHEN (NEW.ISDISPONIBILE = 1)
DECLARE
    SINGOLA       VARCHAR2(255) := 'Singola';
    DOPPIA        VARCHAR2(255) := 'Doppia';
    V_TIPOLOGIA   VARCHAR2(255);
    C_IDCR        SYS_REFCURSOR;
    V_ID_CROCIERA number;
    V_QUANTI      number;
BEGIN
    V_TIPOLOGIA:= :old.TIPOLOGIA;
    IF (:NEW.TIPOLOGIA=SINGOLA) THEN
        V_QUANTI:=1;
    ELSIF (:NEW.TIPOLOGIA=DOPPIA) THEN
        V_QUANTI:=2;
    ELSE
        V_QUANTI:=3;
    END IF;
    OPEN C_IDCR FOR
        SELECT
            IDCROCIERA
        FROM
            CROCIERA
        WHERE
            IDNAVE = :old.IDNAVE;
    LOOP
        FETCH C_IDCR INTO V_ID_CROCIERA;
        EXIT WHEN C_IDCR%NOTFOUND;
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTILIBERI = NUMEROPOSTILIBERI + V_QUANTI
        WHERE
            IDCROCIERA = V_ID_CROCIERA
            AND TIPOLOGIA = V_TIPOLOGIA;
        UPDATE DISPONIBILITACAMERE
        SET
            NUMEROPOSTITOTALI = NUMEROPOSTITOTALI + V_QUANTI
        WHERE
            IDCROCIERA = V_ID_CROCIERA
            AND TIPOLOGIA = V_TIPOLOGIA;
    END LOOP;
    CLOSE C_IDCR;
END;
/

--------------- Gabriele ----------------------

CREATE OR REPLACE TRIGGER PRENOTAZIONE_VISITE_LINGUA BEFORE
    INSERT ON PRENOTAZIONEVISITA FOR EACH ROW
DECLARE
    RES INTEGER;
BEGIN
    SELECT
        COUNT(*) INTO RES
    FROM
        VISITAGUIDATA VG
        JOIN GESTISCE G
        ON VG.IDVISITA = G.IDVISITA
    WHERE
        VG.IDVISITA = :NEW.IDVISITA
        AND UPPER(G.LINGUA) = UPPER(:NEW.LINGUA);
    IF RES = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Lingua non disponibile.');
    END IF;
END;
/


-------- testcase

--trigger meno postiliberi
--insert into PRENOTAZIONE (IDPRENOTAZIONE, IDCLIENTE,IDCROCIERA,COSTOBASE,DATAPRENOTAZIONE,QUANTITASALDATA)values (6,6,1,2400, TO_DATE('2023/01/02', 'YYYY-MM-DD'), 2400);
--insert into PREPRENOTAZIONE (IDPRENOTAZIONE, TIPOLOGIA, QUANTITA) VALUES (6,'Doppia',2);

--trigger meno posti liberi exception
--insert into PREPRENOTAZIONE (IDPRENOTAZIONE, TIPOLOGIA, QUANTITA) VALUES (5,'Tripla',1);

--trigger meno posti liberi
--delete from PREPRENOTAZIONE P where P.IDPRENOTAZIONE=6;

--trigger camera non disponibile
--update camera set ISDISPONIBILE=0 where idcamera=4;

--trigger camera disponibile
--update camera set ISDISPONIBILE=1 where idcamera=4;

--trigger exception
--insert into VISITEDISPONIBILI (IDCROCIERA, IDVISITA, DataVisita) VALUES (2,2, TO_DATE('2023/02/02', 'YYYY-MM-DD'));

--trigger check visita data
--insert into VISITEDISPONIBILI (IDCROCIERA, IDVISITA, DataVisita) VALUES (2,2, TO_DATE('2023/02/16', 'YYYY-MM-DD'));

